'use client'

import { Clause } from '@/lib/api'

interface ReportGeneratorProps {
  clauses: Clause[]
  documentSummary?: string
  fullAnalysis?: string
  documentId: string
}

export default function ReportGenerator({ clauses, documentSummary, fullAnalysis, documentId }: ReportGeneratorProps) {
  
  const generateReport = () => {
    const stats = clauses.reduce((acc, clause) => {
      acc[clause.category] = (acc[clause.category] || 0) + 1
      return acc
    }, {} as Record<string, number>)

    const reportContent = `
# Legal Document Analysis Report
**Document ID:** ${documentId}
**Generated:** ${new Date().toLocaleDateString()}

## Executive Summary
${documentSummary || 'Document analysis completed successfully.'}

## Risk Assessment Overview
- **High Risk (Red):** ${stats.Red || 0} clauses
- **Medium Risk (Yellow):** ${stats.Yellow || 0} clauses  
- **Low Risk (Green):** ${stats.Green || 0} clauses
- **Total Clauses Analyzed:** ${clauses.length}

## Detailed Analysis
${fullAnalysis || 'Comprehensive legal analysis has been performed on this document.'}

## Clause-by-Clause Breakdown

${clauses.map((clause, index) => `
### ${index + 1}. ${clause.type} (${clause.category} Risk)
**Location:** Page ${clause.page_number}
**Risk Score:** ${(clause.score * 100).toFixed(0)}%

**Original Text:**
"${clause.text}"

**Plain English Explanation:**
${clause.explanation || 'Standard clause with typical terms and conditions.'}

**Risk Level:** ${clause.category === 'Red' ? 'ðŸ”´ HIGH RISK - Requires immediate attention' : 
  clause.category === 'Yellow' ? 'ðŸŸ¡ MEDIUM RISK - Review recommended' : 
  'ðŸŸ¢ LOW RISK - Standard terms'}

---
`).join('')}

## Recommendations

### High Priority Actions
${stats.Red > 0 ? `
- Review ${stats.Red} high-risk clause${stats.Red > 1 ? 's' : ''} with legal counsel
- Consider negotiating terms for penalty and termination clauses
- Ensure compliance with all strict obligations
` : '- No high-risk clauses identified'}

### Medium Priority Actions  
${stats.Yellow > 0 ? `
- Review ${stats.Yellow} medium-risk clause${stats.Yellow > 1 ? 's' : ''} for clarity
- Verify time-bound terms and notice periods
- Consider implications of conditional clauses
` : '- No medium-risk clauses requiring attention'}

### General Recommendations
- Keep this report for your records
- Share with relevant stakeholders and advisors
- Review contract terms before signing
- Seek legal advice for complex provisions

---
*This report was generated by Vidhived.ai Legal Analysis Platform*
*For questions or clarifications, consult with qualified legal counsel*
    `.trim()

    return reportContent
  }

  const downloadReport = () => {
    const reportContent = generateReport()
    const blob = new Blob([reportContent], { type: 'text/markdown' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `legal-analysis-report-${documentId}.md`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const downloadPDF = async () => {
    // For now, we'll create a simple HTML version that can be printed as PDF
    const reportContent = generateReport()
    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
    <title>Legal Analysis Report</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; margin: 40px; }
        h1 { color: #2563eb; border-bottom: 2px solid #2563eb; }
        h2 { color: #1f2937; margin-top: 30px; }
        h3 { color: #374151; }
        .risk-high { color: #dc2626; font-weight: bold; }
        .risk-medium { color: #d97706; font-weight: bold; }
        .risk-low { color: #059669; font-weight: bold; }
        .clause-box { border: 1px solid #e5e7eb; padding: 15px; margin: 10px 0; border-radius: 5px; }
        .stats { background: #f3f4f6; padding: 15px; border-radius: 5px; margin: 20px 0; }
    </style>
</head>
<body>
    ${reportContent.replace(/\n/g, '<br>').replace(/#{1,3}\s/g, '<h3>').replace(/<h3>/g, '</h3><h3>').replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')}
</body>
</html>
    `
    
    const blob = new Blob([htmlContent], { type: 'text/html' })
    const url = URL.createObjectURL(blob)
    const newWindow = window.open(url, '_blank')
    if (newWindow) {
      newWindow.onload = () => {
        setTimeout(() => {
          newWindow.print()
        }, 500)
      }
    }
  }

  return (
    <div className="border-t border-gray-200 p-4 bg-gray-50">
      <h3 className="text-sm font-semibold text-gray-900 mb-3 flex items-center">
        <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
        Export Analysis Report
      </h3>
      
      <div className="space-y-2">
        <button
          onClick={downloadReport}
          className="w-full flex items-center justify-center px-3 py-2 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
        >
          <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
          </svg>
          Download Markdown Report
        </button>
        
        <button
          onClick={downloadPDF}
          className="w-full flex items-center justify-center px-3 py-2 text-sm bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors"
        >
          <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z" />
          </svg>
          Print/Save as PDF
        </button>
      </div>
      
      <p className="text-xs text-gray-500 mt-2">
        Reports include clause highlights, explanations, and risk assessments for sharing with colleagues or advisors.
      </p>
    </div>
  )
}